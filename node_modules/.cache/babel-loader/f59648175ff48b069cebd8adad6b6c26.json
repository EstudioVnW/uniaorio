{"ast":null,"code":"var _jsxFileName = \"/home/yasmin/Documentos/workspace/uniao-rio/src/components/Menu.js\";\n// Libs\nimport React, { Component } from 'react'; // Images\n\nimport checkboxIcon from \"../assets/checkbox.svg\";\nimport checkIcon from \"../assets/check.svg\";\n\nclass Menu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      buttonList: [\"Mapeamento\", \"Estatísticas\", \"Grid\"],\n      mappingList: [\"Sócio-Econômico\", \"Demandas e Entregas\", \"ONG's\"],\n      isMapping: false,\n      isSelectedButton: '',\n      isSelectedCheck: ''\n    };\n\n    this.handleIsMappingOpen = button => {\n      this.setState({\n        isSelectedButton: button,\n        isMapping: !this.state.isMapping\n      });\n    };\n\n    this.handleMappingCheck = item => {\n      console.log('item', item);\n      this.setState({\n        isSelectedCheck: item\n      });\n      let newList = [];\n\n      if (item) {\n        newList.concat(item);\n      }\n\n      console.log('concat', newList.concat(item));\n      console.log('newList', newList);\n    };\n\n    this.handleSelected = button => {\n      console.log('button', button);\n      this.setState({\n        isSelectedButton: button\n      });\n    };\n\n    this.renderMapping = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container_mapping\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, this.state.mappingList.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      key: item,\n      className: \"container_mapping-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, this.state.isSelectedCheck === item ? /*#__PURE__*/React.createElement(\"img\", {\n      src: checkIcon,\n      alt: \"check\",\n      className: \"mapping_item-checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: checkboxIcon,\n      alt: \"checkbox\",\n      className: \"mapping_item-checkbox\",\n      onClick: () => this.handleMappingCheck(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mapping_item-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, item))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"aside\", {\n      className: \"container_menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"container_menu-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), this.state.buttonList.map(button => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      key: button,\n      className: \"container_menu-button\",\n      style: {\n        backgroundColor: this.state.isSelectedButton === button ? '#F7BBA9' : null\n      },\n      onClick: button === 'Mapeamento' ? () => this.handleIsMappingOpen(button) : () => this.handleSelected(button),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"menu_button-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, button)))), this.state.isMapping && this.renderMapping());\n  }\n\n}\n\nexport default Menu;","map":{"version":3,"sources":["/home/yasmin/Documentos/workspace/uniao-rio/src/components/Menu.js"],"names":["React","Component","Menu","state","buttonList","mappingList","isMapping","isSelectedButton","isSelectedCheck","handleIsMappingOpen","button","setState","handleMappingCheck","item","console","log","newList","concat","handleSelected","renderMapping","map","checkIcon","checkboxIcon","render","backgroundColor"],"mappings":"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","sourcesContent":["// Libs\nimport React, { Component } from 'react';\n\n// Images\nimport checkboxIcon from '../assets/checkbox.svg';\nimport checkIcon from '../assets/check.svg';\n\nclass Menu extends Component {\n\n  state = {\n    buttonList: [\n      \"Mapeamento\",\n      \"Estatísticas\",\n      \"Grid\"\n    ],\n    mappingList: [\n      \"Sócio-Econômico\",\n      \"Demandas e Entregas\",\n      \"ONG's\"\n    ],\n    isMapping: false,\n    isSelectedButton: '',\n    isSelectedCheck: '',\n  };\n\n  handleIsMappingOpen = (button) => {\n    this.setState({ \n      isSelectedButton: button,\n      isMapping: !this.state.isMapping,\n    });\n  }\n\n  handleMappingCheck = (item) => {\n    console.log('item', item)\n    this.setState({\n      isSelectedCheck: item,\n    })\n\n    let newList = [];\n\n    if(item) {\n      newList.concat(item)\n    }\n\n    console.log('concat', newList.concat(item))\n\n    console.log('newList', newList)\n  }\n\n  handleSelected = (button) => {\n    console.log('button', button)\n    \n    this.setState({ isSelectedButton: button });\n  }\n\n  renderMapping = () => (\n    <div className=\"container_mapping\">\n      {this.state.mappingList.map((item) => (\n        <div key={item} className=\"container_mapping-item\">\n          {/* <div\n            className=\"mapping_item-checkbox\"\n            onClick={() => this.handleMappingCheck(item)}\n          >\n          </div> */}\n          {this.state.isSelectedCheck === item\n            ? <img\n                src={checkIcon}\n                alt=\"check\"\n                className=\"mapping_item-checkbox\"\n              />\n            : <img\n                src={checkboxIcon}\n                alt=\"checkbox\"\n                className=\"mapping_item-checkbox\"\n                onClick={() => this.handleMappingCheck(item)}\n              />\n          }\n          <p className=\"mapping_item-text\">{item}</p>\n        </div>\n      ))}\n    </div>\n  )\n\n  render() {\n    return (\n      <aside className=\"container_menu\">\n        <span className=\"container_menu-circle\"></span>\n        {this.state.buttonList.map((button) => (\n          <>\n            <button\n              key={button}\n              className=\"container_menu-button\"\n              style={{ backgroundColor: this.state.isSelectedButton === button ? '#F7BBA9' : null }}\n              onClick={button === 'Mapeamento' ? () => this.handleIsMappingOpen(button) : () => this.handleSelected(button)}\n            >\n              <p className=\"menu_button-title\">{button}</p>\n            </button>\n          </>\n          )\n        )}\n          {this.state.isMapping && this.renderMapping()}\n\n        \n        {/* <button\n          className=\"container_menu-button\"\n          style={{background: this.state.isMapping ? '#F7BBA9' : null}}\n          onClick={this.handleIsMappingOpen}\n        >\n          <p className=\"menu_button-title\">Mapeamento</p>\n        </button>\n        {this.state.isMapping && this.renderMapping()}\n        <button className=\"container_menu-button\">\n          <p className=\"menu_button-title\">Estatísticas</p>\n        </button>\n        <button className=\"container_menu-button\">\n          <p className=\"menu_button-title\">Strech</p>\n        </button> */}\n    </aside>\n    );\n  }\n}\n\nexport default Menu;"]},"metadata":{},"sourceType":"module"}