{"ast":null,"code":"var _jsxFileName = \"/home/yasmin/Documentos/workspace/uniao-rio/src/components/Menu.js\";\n// Libs\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; // Images\n// import checkboxIcon from '../assets/checkbox.svg';\n// import checkIcon from '../assets/check.svg';\n\nimport Logo from '../assets/logo.png';\n\nclass Menu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      buttonList: [{\n        label: \"Mapeamento\",\n        route: \"/\"\n      }, {\n        label: \"Estatísticas\",\n        route: \"/statistics\"\n      }, {\n        label: \"Grid\",\n        route: \"/grid\"\n      }],\n      mappingList: [\"Sócio-Econômico\", \"Demandas e Entregas\", \"ONG's\"],\n      isMapping: false,\n      isSelectedButton: '',\n      isSelectedCheck: ''\n    };\n\n    this.handleIsMappingOpen = item => {\n      this.setState({\n        isSelectedButton: item,\n        isMapping: !this.state.isMapping\n      });\n    };\n\n    this.handleMappingCheck = item => {\n      this.setState({\n        isSelectedCheck: item // isSelectedCheck: [...this.state.isSelectedCheck, item],\n\n      });\n    };\n\n    this.handleSelected = label => {\n      this.setState({\n        isSelectedButton: label\n      });\n    };\n\n    this.renderMapping = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container_mapping\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, this.state.mappingList.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      key: item,\n      className: \"container_mapping-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mapping_item-checkbox\",\n      onClick: () => this.handleMappingCheck(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mapping_item-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, item))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"aside\", {\n      className: \"container_menu\",\n      style: this.props.styles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"figure\", {\n      className: \"container_menu-logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Logo,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    })), this.state.buttonList.map(({\n      label,\n      route\n    }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n      key: label,\n      className: \"container_menu-button\",\n      activeClassName: \"teste\" // style={{ backgroundColor: this.state.isSelectedButton === label ? '#FBB03B' : null}}\n      ,\n      to: route,\n      onClick: label === 'Mapeamento' ? () => this.handleIsMappingOpen(label) : () => this.handleSelected(label),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"menu_button-title\",\n      style: {\n        color: this.state.isSelectedButton === label ? '#000' : null\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, label)), label === \"Mapeamento\" ? this.state.isMapping && this.renderMapping() : null)));\n  }\n\n}\n\nexport default Menu;","map":{"version":3,"sources":["/home/yasmin/Documentos/workspace/uniao-rio/src/components/Menu.js"],"names":["React","Component","Link","Logo","Menu","state","buttonList","label","route","mappingList","isMapping","isSelectedButton","isSelectedCheck","handleIsMappingOpen","item","setState","handleMappingCheck","handleSelected","renderMapping","map","render","props","styles","color"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;AACA;AACA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAE3BI,KAF2B,GAEnB;AACNC,MAAAA,UAAU,EAAE,CACV;AACEC,QAAAA,KAAK,EAAE,YADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADU,EAKV;AACED,QAAAA,KAAK,EAAE,cADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALU,EASV;AACED,QAAAA,KAAK,EAAE,MADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OATU,CADN;AAeNC,MAAAA,WAAW,EAAE,CACX,iBADW,EAEX,qBAFW,EAGX,OAHW,CAfP;AAoBNC,MAAAA,SAAS,EAAE,KApBL;AAqBNC,MAAAA,gBAAgB,EAAE,EArBZ;AAsBNC,MAAAA,eAAe,EAAE;AAtBX,KAFmB;;AAAA,SA2B3BC,mBA3B2B,GA2BJC,IAAD,IAAU;AAC9B,WAAKC,QAAL,CAAc;AACZJ,QAAAA,gBAAgB,EAAEG,IADN;AAEZJ,QAAAA,SAAS,EAAE,CAAC,KAAKL,KAAL,CAAWK;AAFX,OAAd;AAID,KAhC0B;;AAAA,SAkC3BM,kBAlC2B,GAkCLF,IAAD,IAAU;AAC7B,WAAKC,QAAL,CAAc;AACZH,QAAAA,eAAe,EAAEE,IADL,CAEZ;;AAFY,OAAd;AAID,KAvC0B;;AAAA,SAyC3BG,cAzC2B,GAyCTV,KAAD,IAAW;AAC1B,WAAKQ,QAAL,CAAc;AAAEJ,QAAAA,gBAAgB,EAAEJ;AAApB,OAAd;AACD,KA3C0B;;AAAA,SA8C3BW,aA9C2B,GA8CX,mBACd;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKb,KAAL,CAAWI,WAAX,CAAuBU,GAAvB,CAA4BL,IAAD,iBAC1B;AAAK,MAAA,GAAG,EAAEA,IAAV;AAAgB,MAAA,SAAS,EAAC,wBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKE,kBAAL,CAAwBF,IAAxB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAmBE;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCA,IAAlC,CAnBF,CADD,CADH,CA/CyB;AAAA;;AA2E3BM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAkC,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEnB,IAAV;AAAgB,MAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIG,KAAKE,KAAL,CAAWC,UAAX,CAAsBa,GAAtB,CAA0B,CAAC;AAACZ,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAD,kBACzB,uDACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAED,KADP;AAEE,MAAA,SAAS,EAAC,uBAFZ;AAGE,MAAA,eAAe,EAAC,OAHlB,CAIE;AAJF;AAKE,MAAA,EAAE,EAAEC,KALN;AAME,MAAA,OAAO,EAAED,KAAK,KAAK,YAAV,GACL,MAAM,KAAKM,mBAAL,CAAyBN,KAAzB,CADD,GAEL,MAAM,KAAKU,cAAL,CAAoBV,KAApB,CARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAWE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,KAAK,EAAE;AAAEgB,QAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWM,gBAAX,KAAgCJ,KAAhC,GAAwC,MAAxC,GAAiD;AAA1D,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,KAJH,CAXF,CADF,EAmBGA,KAAK,KAAK,YAAV,GAAyB,KAAKF,KAAL,CAAWK,SAAX,IAAwB,KAAKQ,aAAL,EAAjD,GAAwE,IAnB3E,CADD,CAJH,CADF;AA8BD;;AA1G0B;;AA6G7B,eAAed,IAAf","sourcesContent":["// Libs\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Images\n// import checkboxIcon from '../assets/checkbox.svg';\n// import checkIcon from '../assets/check.svg';\nimport Logo from '../assets/logo.png';\n\nclass Menu extends Component {\n\n  state = {\n    buttonList: [\n      {\n        label: \"Mapeamento\",\n        route: \"/\"\n      },\n      {\n        label: \"Estatísticas\",\n        route: \"/statistics\"\n      },\n      {\n        label: \"Grid\",\n        route: \"/grid\"\n      },      \n    ],\n    mappingList: [\n      \"Sócio-Econômico\",\n      \"Demandas e Entregas\",\n      \"ONG's\"\n    ],\n    isMapping: false,\n    isSelectedButton: '',\n    isSelectedCheck: '',\n  };\n\n  handleIsMappingOpen = (item) => {\n    this.setState({ \n      isSelectedButton: item,\n      isMapping: !this.state.isMapping,\n    });\n  }\n\n  handleMappingCheck = (item) => {\n    this.setState({\n      isSelectedCheck: item,\n      // isSelectedCheck: [...this.state.isSelectedCheck, item],\n    })\n  }\n\n  handleSelected = (label) => {    \n    this.setState({ isSelectedButton: label });\n  }\n\n\n  renderMapping = () => (\n    <div className=\"container_mapping\">\n      {this.state.mappingList.map((item) => (\n        <div key={item} className=\"container_mapping-item\">\n          <div\n            className=\"mapping_item-checkbox\"\n            onClick={() => this.handleMappingCheck(item)}\n          >\n          </div>\n          {/* {this.state.isSelectedCheck === item\n            ? <img\n                src={checkIcon}\n                alt=\"check\"\n                className=\"mapping_item-checkbox\"\n              />\n            : <img\n                src={checkboxIcon}\n                alt=\"checkbox\"\n                className=\"mapping_item-checkbox\"\n                onClick={() => this.handleMappingCheck(item)}\n              />\n          } */}\n          <p className=\"mapping_item-text\">{item}</p>\n        </div>\n      ))}\n    </div>\n  )\n\n\n  render() {\n    return (\n      <aside className=\"container_menu\" style={this.props.styles}>\n        <figure className=\"container_menu-logo\">\n          <img src={Logo} alt=\"logo\" />\n        </figure>\n        {this.state.buttonList.map(({label, route}) => (\n          <>\n            <Link\n              key={label}\n              className=\"container_menu-button\"\n              activeClassName=\"teste\"\n              // style={{ backgroundColor: this.state.isSelectedButton === label ? '#FBB03B' : null}}\n              to={route}\n              onClick={label === 'Mapeamento'\n                ? () => this.handleIsMappingOpen(label)\n                : () => this.handleSelected(label)\n              }\n            >\n              <p \n                className=\"menu_button-title\"\n                style={{ color: this.state.isSelectedButton === label ? '#000' : null }}\n              >\n                {label}\n              </p>\n            </Link>\n            {label === \"Mapeamento\" ? this.state.isMapping && this.renderMapping() : null}\n          </>\n        ))}\n    </aside>\n    );\n  }\n}\n\nexport default Menu;"]},"metadata":{},"sourceType":"module"}