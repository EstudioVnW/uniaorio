{"ast":null,"code":"var _jsxFileName = \"/home/yasmin/Documentos/workspace/uniao-rio/src/components/HumanitarianMap.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl'; // import 'mapbox-gl/dist/mapbox-gl.css';\n//import Elastic from '@elastic/elasticsearch';\n//const client = new Elastic({ node: 'https://elastic:RMwayjd0u1A7YeQZfLv1wEdY@761fe4305be441e1b752de16019635c9.us-east-1.aws.found.io:9243' })\n//endpoint: https://761fe4305be441e1b752de16019635c9.us-east-1.aws.found.io:9243\n//username: elastic\n//senha: RMwayjd0u1A7YeQZfLv1wEdY\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaWdvcmNvdXRvIiwiYSI6ImNrOWZudjNtcTAyd3EzbHI3a2ppbnpnemUifQ.D--CSyWyEk70oULTVok7vg';\n\nclass HumanitarianMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -43.2096,\n      lat: -22.9035,\n      zoom: 10\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v9',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    map.on('move', () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n    map.addControl(new mapboxgl.NavigationControl());\n    map.on('load', function () {\n      map.addSource('earthquakes', {\n        type: 'geojson',\n        data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        cluster: true,\n        clusterMaxZoom: 14,\n        // Max zoom to cluster points on\n        clusterRadius: 50 // Radius of each cluster when clustering points (defaults to 50)\n\n      });\n      map.addLayer({\n        id: 'clusters',\n        type: 'circle',\n        source: 'earthquakes',\n        filter: ['has', 'point_count'],\n        paint: {\n          'circle-color': ['step', ['get', 'point_count'], '#51bbd6', 100, '#f1f075', 750, '#f28cb1'],\n          'circle-radius': ['step', ['get', 'point_count'], 20, 100, 30, 750, 40]\n        }\n      });\n      map.addLayer({\n        id: 'cluster-count',\n        type: 'symbol',\n        source: 'earthquakes',\n        filter: ['has', 'point_count'],\n        layout: {\n          'text-field': '{point_count_abbreviated}',\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n          'text-size': 12\n        }\n      });\n      map.addLayer({\n        id: 'unclustered-point',\n        type: 'circle',\n        source: 'earthquakes',\n        filter: ['!', ['has', 'point_count']],\n        paint: {\n          'circle-color': '#11b4da',\n          'circle-radius': 4,\n          'circle-stroke-width': 1,\n          'circle-stroke-color': '#fff'\n        }\n      });\n      map.on('click', 'clusters', function (e) {\n        var features = map.queryRenderedFeatures(e.point, {\n          layers: ['clusters']\n        });\n        var clusterId = features[0].properties.cluster_id;\n        map.getSource('earthquakes').getClusterExpansionZoom(clusterId, function (err, zoom) {\n          if (err) return;\n          map.easeTo({\n            center: features[0].geometry.coordinates,\n            zoom: zoom\n          });\n        });\n      });\n      map.on('click', 'unclustered-point', function (e) {\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var mag = e.features[0].properties.mag;\n        var tsunami;\n\n        if (e.features[0].properties.tsunami === 1) {\n          tsunami = 'yes';\n        } else {\n          tsunami = 'no';\n        } // Ensure that if the map is zoomed out such that\n        // multiple copies of the feature are visible, the\n        // popup appears over the copy being pointed to.\n\n\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n\n        new mapboxgl.Popup().setLngLat(coordinates).setHTML('magnitude: ' + mag + '<br>Was there a tsunami?: ' + tsunami).addTo(map);\n      });\n      map.on('mouseenter', 'clusters', function () {\n        map.getCanvas().style.cursor = 'pointer';\n      });\n      map.on('mouseleave', 'clusters', function () {\n        map.getCanvas().style.cursor = '';\n      });\n    }); //this.queryAll();\n  }\n  /*queryAll = async () => {\n    const { body } = await client.search({\n      index: 'ibge_rj',\n      body: {\n        query: {\n          match: {\n            quote: 'winter'\n          }\n        }\n      }\n    })\n    console.log(body.hits.hits)\n  }*/\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebarStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, \"Longitude: \", this.state.lng, \" | Latitude: \", this.state.lat, \" | Zoom: \", this.state.zoom)), /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: \"mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default HumanitarianMap;","map":{"version":3,"sources":["/home/yasmin/Documentos/workspace/uniao-rio/src/components/HumanitarianMap.js"],"names":["React","ReactDOM","mapboxgl","accessToken","HumanitarianMap","Component","constructor","props","state","lng","lat","zoom","componentDidMount","map","Map","container","mapContainer","style","center","on","setState","getCenter","toFixed","getZoom","addControl","NavigationControl","addSource","type","data","cluster","clusterMaxZoom","clusterRadius","addLayer","id","source","filter","paint","layout","e","features","queryRenderedFeatures","point","layers","clusterId","properties","cluster_id","getSource","getClusterExpansionZoom","err","easeTo","geometry","coordinates","slice","mag","tsunami","Math","abs","lngLat","Popup","setLngLat","setHTML","addTo","getCanvas","cursor","render","el"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\n// import 'mapbox-gl/dist/mapbox-gl.css';\n\n//import Elastic from '@elastic/elasticsearch';\n//const client = new Elastic({ node: 'https://elastic:RMwayjd0u1A7YeQZfLv1wEdY@761fe4305be441e1b752de16019635c9.us-east-1.aws.found.io:9243' })\n\n//endpoint: https://761fe4305be441e1b752de16019635c9.us-east-1.aws.found.io:9243\n//username: elastic\n//senha: RMwayjd0u1A7YeQZfLv1wEdY\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaWdvcmNvdXRvIiwiYSI6ImNrOWZudjNtcTAyd3EzbHI3a2ppbnpnemUifQ.D--CSyWyEk70oULTVok7vg';\n\nclass HumanitarianMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -43.2096,\n      lat:  -22.9035,\n      zoom: 10\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v9',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n\n    map.on('move', () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n    map.addControl(new mapboxgl.NavigationControl());\n\n    map.on('load', function() {\n\n      map.addSource('earthquakes', {\n        type: 'geojson',\n        data:\n        'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        cluster: true,\n        clusterMaxZoom: 14, // Max zoom to cluster points on\n        clusterRadius: 50 // Radius of each cluster when clustering points (defaults to 50)\n        });\n\n        map.addLayer({\n          id: 'clusters',\n          type: 'circle',\n          source: 'earthquakes',\n          filter: ['has', 'point_count'],\n          paint: {\n          'circle-color': [\n          'step',\n          ['get', 'point_count'],\n          '#51bbd6',\n          100,\n          '#f1f075',\n          750,\n          '#f28cb1'\n          ],\n          'circle-radius': [\n          'step',\n          ['get', 'point_count'],\n          20,\n          100,\n          30,\n          750,\n          40\n          ]\n          }\n        });\n\n        map.addLayer({\n          id: 'cluster-count',\n          type: 'symbol',\n          source: 'earthquakes',\n          filter: ['has', 'point_count'],\n          layout: {\n          'text-field': '{point_count_abbreviated}',\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n          'text-size': 12\n          }\n        });\n\n        map.addLayer({\n          id: 'unclustered-point',\n          type: 'circle',\n          source: 'earthquakes',\n          filter: ['!', ['has', 'point_count']],\n          paint: {\n          'circle-color': '#11b4da',\n          'circle-radius': 4,\n          'circle-stroke-width': 1,\n          'circle-stroke-color': '#fff'\n          }\n        });\n\n        map.on('click', 'clusters', function(e) {\n          var features = map.queryRenderedFeatures(e.point, {\n          layers: ['clusters']\n          });\n          var clusterId = features[0].properties.cluster_id;\n          map.getSource('earthquakes').getClusterExpansionZoom(\n          clusterId,\n          function(err, zoom) {\n          if (err) return;\n           \n          map.easeTo({\n          center: features[0].geometry.coordinates,\n          zoom: zoom\n          });\n          }\n          );\n          });\n\n          map.on('click', 'unclustered-point', function(e) {\n            var coordinates = e.features[0].geometry.coordinates.slice();\n            var mag = e.features[0].properties.mag;\n            var tsunami;\n             \n            if (e.features[0].properties.tsunami === 1) {\n            tsunami = 'yes';\n            } else {\n            tsunami = 'no';\n            }\n             \n            // Ensure that if the map is zoomed out such that\n            // multiple copies of the feature are visible, the\n            // popup appears over the copy being pointed to.\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n            }\n             \n            new mapboxgl.Popup()\n            .setLngLat(coordinates)\n            .setHTML(\n            'magnitude: ' + mag + '<br>Was there a tsunami?: ' + tsunami\n            )\n            .addTo(map);\n            });\n             \n            map.on('mouseenter', 'clusters', function() {\n            map.getCanvas().style.cursor = 'pointer';\n            });\n            map.on('mouseleave', 'clusters', function() {\n            map.getCanvas().style.cursor = '';\n            });\n    })\n\n    //this.queryAll();\n  }\n\n  /*queryAll = async () => {\n    const { body } = await client.search({\n      index: 'ibge_rj',\n      body: {\n        query: {\n          match: {\n            quote: 'winter'\n          }\n        }\n      }\n    })\n    console.log(body.hits.hits)\n  }*/\n\n  render() {\n    return (\n      <div>\n        <div>\n          <div className='sidebarStyle'>Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom: {this.state.zoom}</div>\n        </div>\n        <div ref={el => this.mapContainer = el} className=\"mapContainer\"/>\n      </div>\n    );\n  }\n}\n\nexport default HumanitarianMap;"]},"metadata":{},"sourceType":"module"}