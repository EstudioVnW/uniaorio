{"ast":null,"code":"import _classCallCheck from\"/home/yasmin/Documentos/workspace/uniao-rio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/yasmin/Documentos/workspace/uniao-rio/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/yasmin/Documentos/workspace/uniao-rio/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/yasmin/Documentos/workspace/uniao-rio/node_modules/@babel/runtime/helpers/esm/inherits\";// Libs\nimport React,{Component}from'react';import mapboxgl from'mapbox-gl';// Components\nimport Menu from'../components/Menu';// Images\n// import MarkerIcon from '../assets/marker.svg';\nmapboxgl.accessToken='pk.eyJ1IjoiaWdvcmNvdXRvIiwiYSI6ImNrOWZudjNtcTAyd3EzbHI3a2ppbnpnemUifQ.D--CSyWyEk70oULTVok7vg';var HumanitarianMap=/*#__PURE__*/function(_Component){_inherits(HumanitarianMap,_Component);var _super=_createSuper(HumanitarianMap);function HumanitarianMap(props){var _this;_classCallCheck(this,HumanitarianMap);_this=_super.call(this,props);_this.state={lng:-43.2096,lat:-22.9035,zoom:10};return _this;}_createClass(HumanitarianMap,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var map=new mapboxgl.Map({container:this.mapContainer,style:'mapbox://styles/igorcouto/ck9mtp0zx384s1jwau5diy2w4/draft',center:[this.state.lng,this.state.lat],zoom:this.state.zoom});map.on('move',function(){_this2.setState({lng:map.getCenter().lng.toFixed(4),lat:map.getCenter().lat.toFixed(4),zoom:map.getZoom().toFixed(2)});});// MARCADOR!!!\nvar marker=new mapboxgl.Marker({draggable:true}).setLngLat([0,0]).addTo(map);function onDragEnd(){var lngLat=marker.getLngLat();var teste=\"longitude \".concat(lngLat.lng,\", latitude \").concat(lngLat.lat);console.log('teste',teste);return teste;// coordinates.style.display = 'block';\n// coordinates.innerHTML =\n// 'Longitude: ' + lngLat.lng + '<br />Latitude: ' + lngLat.lat;\n}marker.on('dragend',onDragEnd);map.on('load',function(){// var layers = map.getStyle().layers;\n// Find the index of the first symbol layer in the map style\n// var firstSymbolId;\n// for (var i = 0; i < layers.length; i++) {\n//   if (layers[i].type === 'symbol') {\n//     firstSymbolId = layers[i].id;\n//     break;\n//   }\n// }\n// map.addSource('urban-areas', {\n//   'type': 'geojson',\n//   'data': 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_50m_urban_areas.geojson'\n// });\n// map.addLayer({\n//   'id': 'urban-areas-fill',\n//   'type': 'fill',\n//   'source': 'urban-areas',\n//   'layout': {},\n//   'paint': {\n//     'fill-color': '#ffa500',\n//     'fill-opacity': 0.6\n//   },\n//   firstSymbolId\n// });\n// BOLINHAS!!!\nmap.addSource('earthquakes',{type:'geojson',// Point to GeoJSON data. This example visualizes all M1.0+ earthquakes\n// from 12/22/15 to 1/21/16 as logged by USGS' Earthquake hazards program.\ndata:'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',cluster:true,clusterMaxZoom:14,// Max zoom to cluster points on\nclusterRadius:50// Radius of each cluster when clustering points (defaults to 50)\n});map.addLayer({id:'clusters',type:'circle',source:'earthquakes',filter:['has','point_count'],paint:{// Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\n// with three steps to implement three types of circles:\n//   * Blue, 20px circles when point count is less than 100\n//   * Yellow, 30px circles when point count is between 100 and 750\n//   * Pink, 40px circles when point count is greater than or equal to 750\n'circle-color':['step',['get','point_count'],'#51bbd6',100,'#f1f075',750,'#f28cb1'],'circle-radius':['step',['get','point_count'],20,100,30,750,40]}});map.addLayer({id:'cluster-count',type:'symbol',source:'earthquakes',filter:['has','point_count'],layout:{'text-field':'{point_count_abbreviated}','text-font':['DIN Offc Pro Medium','Arial Unicode MS Bold'],'text-size':12}});map.addLayer({id:'unclustered-point',type:'circle',source:'earthquakes',filter:['!',['has','point_count']],paint:{'circle-color':'#11b4da','circle-radius':4,'circle-stroke-width':1,'circle-stroke-color':'#fff'}});map.on('click','clusters',function(e){var features=map.queryRenderedFeatures(e.point,{layers:['clusters']});var clusterId=features[0].properties.cluster_id;map.getSource('earthquakes').getClusterExpansionZoom(clusterId,function(err,zoom){if(err)return;map.easeTo({center:features[0].geometry.coordinates,zoom:zoom});});});map.on('click','unclustered-point',function(e){console.log('e',e.features);var coordinates=e.features[0].geometry.coordinates.slice();var mag=e.features[0].properties.mag;var tsunami;if(e.features[0].properties.tsunami===1){tsunami='yes';}else{tsunami='no';}while(Math.abs(e.lngLat.lng-coordinates[0])>180){coordinates[0]+=e.lngLat.lng>coordinates[0]?360:-360;}new mapboxgl.Popup().setLngLat(coordinates).setHTML('magnitude: '+mag+'<br>Was there a tsunami?: '+tsunami).addTo(map);});map.on('mouseenter','clusters',function(){map.getCanvas().style.cursor='pointer';});map.on('mouseleave','clusters',function(){map.getCanvas().style.cursor='';});});map.addControl(new mapboxgl.NavigationControl());//this.queryAll();\n}/*queryAll = async () => {\n    const { body } = await client.search({\n      index: 'ibge_rj',\n      body: {\n        query: {\n          match: {\n            quote: 'winter'\n          }\n        }\n      }\n    })\n    console.log(body.hits.hits)\n  }*/},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"container_map-rio\"},/*#__PURE__*/React.createElement(\"p\",{className:\"map_rio-text\"},\"riocontra\"),/*#__PURE__*/React.createElement(\"p\",{className:\"map_rio-text\",style:{color:'#F05123'}},\"corona\")),/*#__PURE__*/React.createElement(Menu,{styles:{position:'absolute',top:0,left:0,zIndex:3}})),/*#__PURE__*/React.createElement(\"div\",{ref:function ref(el){return _this3.mapContainer=el;},className:\"mapContainer\"}));}}]);return HumanitarianMap;}(Component);export default HumanitarianMap;","map":{"version":3,"sources":["/home/yasmin/Documentos/workspace/uniao-rio/src/screens/HumanitarianMap.js"],"names":["React","Component","mapboxgl","Menu","accessToken","HumanitarianMap","props","state","lng","lat","zoom","map","Map","container","mapContainer","style","center","on","setState","getCenter","toFixed","getZoom","marker","Marker","draggable","setLngLat","addTo","onDragEnd","lngLat","getLngLat","teste","console","log","addSource","type","data","cluster","clusterMaxZoom","clusterRadius","addLayer","id","source","filter","paint","layout","e","features","queryRenderedFeatures","point","layers","clusterId","properties","cluster_id","getSource","getClusterExpansionZoom","err","easeTo","geometry","coordinates","slice","mag","tsunami","Math","abs","Popup","setHTML","getCanvas","cursor","addControl","NavigationControl","color","position","top","left","zIndex","el"],"mappings":"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","sourcesContent":["// Libs\nimport React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\n// Components\nimport Menu from '../components/Menu'\n\n// Images\n// import MarkerIcon from '../assets/marker.svg';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiaWdvcmNvdXRvIiwiYSI6ImNrOWZudjNtcTAyd3EzbHI3a2ppbnpnemUifQ.D--CSyWyEk70oULTVok7vg';\n\nclass HumanitarianMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -43.2096,\n      lat:  -22.9035,\n      zoom: 10\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/igorcouto/ck9mtp0zx384s1jwau5diy2w4/draft',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n\n    map.on('move', () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n\n    // MARCADOR!!!\n    var marker = new mapboxgl.Marker({\n      draggable: true\n    })\n      .setLngLat([0, 0])\n      .addTo(map);\n      \n    function onDragEnd() {\n      var lngLat = marker.getLngLat();\n\n      const teste = `longitude ${lngLat.lng}, latitude ${lngLat.lat}` \n      console.log('teste', teste)\n      return teste\n\n      // coordinates.style.display = 'block';\n      // coordinates.innerHTML =\n      // 'Longitude: ' + lngLat.lng + '<br />Latitude: ' + lngLat.lat;\n    }\n      \n    marker.on('dragend', onDragEnd);\n\n    map.on('load', () => {\n      // var layers = map.getStyle().layers;\n      // Find the index of the first symbol layer in the map style\n      // var firstSymbolId;\n      // for (var i = 0; i < layers.length; i++) {\n      //   if (layers[i].type === 'symbol') {\n      //     firstSymbolId = layers[i].id;\n      //     break;\n      //   }\n      // }\n\n      // map.addSource('urban-areas', {\n      //   'type': 'geojson',\n      //   'data': 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_50m_urban_areas.geojson'\n      // });\n      // map.addLayer({\n      //   'id': 'urban-areas-fill',\n      //   'type': 'fill',\n      //   'source': 'urban-areas',\n      //   'layout': {},\n      //   'paint': {\n      //     'fill-color': '#ffa500',\n      //     'fill-opacity': 0.6\n      //   },\n      //   firstSymbolId\n      // });\n      \n\n      // BOLINHAS!!!\n      map.addSource('earthquakes', {\n        type: 'geojson',\n        // Point to GeoJSON data. This example visualizes all M1.0+ earthquakes\n        // from 12/22/15 to 1/21/16 as logged by USGS' Earthquake hazards program.\n        data:\n          'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        cluster: true,\n        clusterMaxZoom: 14, // Max zoom to cluster points on\n        clusterRadius: 50 // Radius of each cluster when clustering points (defaults to 50)\n      });\n\n      map.addLayer({\n        id: 'clusters',\n        type: 'circle',\n        source: 'earthquakes',\n        filter: ['has', 'point_count'],\n        paint: {\n          // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\n          // with three steps to implement three types of circles:\n          //   * Blue, 20px circles when point count is less than 100\n          //   * Yellow, 30px circles when point count is between 100 and 750\n          //   * Pink, 40px circles when point count is greater than or equal to 750\n          'circle-color': [\n            'step',\n            ['get', 'point_count'],\n            '#51bbd6',\n            100,\n            '#f1f075',\n            750,\n            '#f28cb1'\n          ],\n          'circle-radius': [\n            'step',\n            ['get', 'point_count'],\n            20,\n            100,\n            30,\n            750,\n            40\n          ]\n        }\n      });\n\n      map.addLayer({\n        id: 'cluster-count',\n        type: 'symbol',\n        source: 'earthquakes',\n        filter: ['has', 'point_count'],\n        layout: {\n          'text-field': '{point_count_abbreviated}',\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n          'text-size': 12\n        }\n      });\n\n      map.addLayer({\n        id: 'unclustered-point',\n        type: 'circle',\n        source: 'earthquakes',\n        filter: ['!', ['has', 'point_count']],\n        paint: {\n          'circle-color': '#11b4da',\n          'circle-radius': 4,\n          'circle-stroke-width': 1,\n          'circle-stroke-color': '#fff'\n        }\n      });\n\n      map.on('click', 'clusters', function (e) {\n        var features = map.queryRenderedFeatures(e.point, {\n          layers: ['clusters']\n        });\n        var clusterId = features[0].properties.cluster_id;\n        map.getSource('earthquakes').getClusterExpansionZoom(\n          clusterId,\n          function (err, zoom) {\n            if (err) return;\n\n            map.easeTo({\n              center: features[0].geometry.coordinates,\n              zoom: zoom\n            });\n          }\n        );\n      });\n\n      map.on('click', 'unclustered-point', function (e) {\n        console.log('e', e.features)\n\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var mag = e.features[0].properties.mag;\n        var tsunami;\n\n        if (e.features[0].properties.tsunami === 1) {\n          tsunami = 'yes';\n        } else {\n          tsunami = 'no';\n        }\n\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n\n        new mapboxgl.Popup()\n          .setLngLat(coordinates)\n          .setHTML(\n            'magnitude: ' + mag + '<br>Was there a tsunami?: ' + tsunami\n          )\n          .addTo(map);\n      });\n\n      map.on('mouseenter', 'clusters', function () {\n        map.getCanvas().style.cursor = 'pointer';\n      });\n      map.on('mouseleave', 'clusters', function () {\n        map.getCanvas().style.cursor = '';\n      });\n    })\n\n    map.addControl(new mapboxgl.NavigationControl());\n    //this.queryAll();\n  }\n\n  /*queryAll = async () => {\n    const { body } = await client.search({\n      index: 'ibge_rj',\n      body: {\n        query: {\n          match: {\n            quote: 'winter'\n          }\n        }\n      }\n    })\n    console.log(body.hits.hits)\n  }*/\n\n  render() {\n    return (\n      <div>\n        <div>\n          <div className='container_map-rio'>\n            <p className='map_rio-text'>\n              riocontra\n            </p>\n            <p className='map_rio-text' style={{color: '#F05123'}}>corona</p>\n          </div>\n          {/* <div className='sidebarStyle'>Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom: {this.state.zoom}</div> */}\n          <Menu styles={{position: 'absolute', top: 0, left: 0, zIndex: 3}} />\n        </div>\n        <div ref={el => this.mapContainer = el} className=\"mapContainer\"/>\n      </div>\n    );\n  }\n}\n\nexport default HumanitarianMap;"]},"metadata":{},"sourceType":"module"}